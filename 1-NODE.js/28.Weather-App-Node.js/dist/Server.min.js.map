{"version":3,"sources":["Server.js"],"names":["http","require","fs","homeFile","readFileSync","requests","newVal","newFile","file","replace","concat","main","temp","toFixed","temp_max","name","createServer","req","sys","country","weather","server","realTimeData","arrayData","res","replaceVal","url","join","on","chunk","JSON","parse","console","log","end","val","writeHead","write","err","error","Content-Type","listen"],"mappings":"aAAA,IAAMA,KAAOC,QAAQ,QACfC,GAAKD,QAAQ,MADbD,SAAOC,QAAO,YACZE,SAAWD,GAAAE,aAAnB,eAAA,SACMC,WAAWJ,SAAAA,EAAQK,GAKvB,IAAIC,EAAUC,EAAKC,QAHfN,cAGU,GAAAO,QAERJ,EAAOK,KAAKC,KAAO,QAAQC,QAAQ,KAuBnC,OALNN,GADFA,GAPEA,GACAA,GAbAA,EAAIA,EAAcE,QAIlBF,eAIAA,EAAUA,KAAAA,SACR,QAAAM,QACCP,KAGeG,QAClBF,eAEAD,EAAOC,KAAPO,SAAA,QAAAD,QAAA,KAJkBJ,QAAQ,eAAgBH,EAAOS,OAO/BC,QAAAA,cAAcC,EAADC,IAAcC,UAC7CV,QAAoB,iBAAAH,EAAAc,QAAA,GAAAT,OAQdU,OAAMC,KAAAA,aAAeC,SAASN,EACvBO,GACIC,KAAPR,EAAAS,IACDrB,SACAsB,kGAIJC,GAAG,OAAO,SAAAC,GACT,IATMP,EAUJ,CADOQ,KAAAC,MAAAF,IAKTG,IAAQC,SAAAA,GACJC,OAAJT,WAAAtB,SAAAgC,KAECR,KAAA,IACDS,EAAAA,UAAJ,IAAmB,aAAEZ,EAAAa,MAAAf,KAClBM,GAACM,MAAJ,SAAAI,GACDA,GA7BHN,QAAAO,MAAA,0DAuBQP,QAAQC,IAAI,OACZT,EAAIU,SAGRV,EAAIY,UAAU,IAAK,CAAEI,eAAgB,cACrChB,EAAIU,IAAJ,uCAIJb,OAAOoB,OAAO,IAAM,YAAa,WAC/BT,QAAQC,IAAR","file":"Server.min.js","sourcesContent":["const http = require(\"http\");\r\nconst fs = require(\"fs\");\r\nconst requests = require(\"requests\");\r\n\r\nconst homeFile = fs.readFileSync(\"./index.html\", \"utf-8\");\r\n\r\nconst replaceVal = (file, newVal) => {\r\n  let newFile = file.replace(\r\n    \"{%tempVal%}\",\r\n    `${(newVal.main.temp - 273.15).toFixed(2)}`\r\n  );\r\n  newFile = newFile.replace(\r\n    \"{%tempMin%}\",\r\n    (newVal.main.temp_min - 273.15).toFixed(2)\r\n  );\r\n  newFile = newFile.replace(\r\n    \"{%tempMax%}\",\r\n    (newVal.main.temp_max - 273.15).toFixed(2)\r\n  );\r\n  newFile = newFile.replace(\"{%location%}\", newVal.name);\r\n  newFile = newFile.replace(\"{%country%}\", newVal.sys.country);\r\n  newFile = newFile.replace(\"{%tempStatus%}\", newVal.weather[0].main);\r\n\r\n  return newFile;\r\n};\r\n\r\nconst server = http.createServer((req, res) => {\r\n  if (req.url == \"/\") {\r\n    requests(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=indore&appid=71a8c7a2be7cf985a299657f9b550aca`\r\n    )\r\n      .on(\"data\", (chunk) => {\r\n        const JSONData = JSON.parse(chunk);\r\n        const arrayData = [JSONData];\r\n        // I convert the data into array so that i can easily map through that data..\r\n        const realTimeData = arrayData\r\n          .map((val) => {\r\n            return replaceVal(homeFile, val);\r\n          })\r\n          .join(\"\");\r\n        res.writeHead(200, \"text/html\");\r\n        res.write(realTimeData);\r\n      })\r\n      .on(\"end\", (err) => {\r\n        if (err) {\r\n          console.error(\r\n            `Something wrong happened could not fetch data from API`\r\n          );\r\n        }\r\n        console.log(\"END\");\r\n        res.end();\r\n      });\r\n  } else {\r\n    res.writeHead(404, { \"Content-Type\": \"text/html\" });\r\n    res.end(`<h1>File does not exit..-_-</h1>`);\r\n  }\r\n});\r\n\r\nserver.listen(8000, \"127.0.0.1\", () => {\r\n  console.log(`Server is listening on port 8000`);\r\n});\r\n"]}